#!/bin/bash
# Copies all log files from mounted USB drives with names that
# end with "_B-HUMAN". If the target directory is an sftp-URL,
# access must work without additional input, i.e. the
# SSH server must already be known and public key authentication
# must be used. On Windows, this must work inside WSL, i.e.
# WSL's /root/.ssh must contain the required files.

set -e

basePath=$(cd "$(dirname "$(which "$0")")" && pwd)

usage()
{
  echo "usage: $0 [-d | --just-delete] [<targetDir>]" >&2
  echo "  options:"
  echo "    -d             Delete log files after copying." >&2
  echo "    --just-delete  Just delete log files." >&2
  echo "  examples:"
  echo "    $0"
  echo "    $0 -d ../../Config/Logs"
  echo "    $0 sftp://sftp@b-human.informatik.uni-bremen.de:/upload/data/logs/2020/Testspiele"
  echo "    $0 --just-delete"
  exit 1
}

copy=true
delete=false
targetDir=${basePath}/../../Config/Logs
mkdir1=
mkdir2="xargs mkdir -p"
cp1=
cp2="xargs cp"
cmd=xargs
while true; do
  case $1 in
    "")
      break;
      ;;
    "-d" | "/d")
      delete=true
      ;;
    "--just-delete" | "/just-delete")
      delete=true
      copy=false
      ;;
    "-h" | "/h" | "/?" | "--help")
      usage
      ;;
    -*)
      echo "unknown option: $1" >&2
      usage
      ;;
    *)
      targetDir=$1
      if [ ! -z "$(grep <<<"$targetDir" "^sftp://.*:")" ]; then
        host="$(sed <<<"$targetDir" "s%^sftp://\([^:]*\).*%\1%")"
        targetDir="$(sed <<<"$targetDir" "s%^sftp://[^:]*:%%")"
        mkdir1="-mkdir"
        mkdir2="sftp -qb - $host"
        cp1=put
        cp2="sftp -qb - $host"
      fi
      ;;
  esac
  shift
done

set -eu

# Append timestamp to target directory.
targetPath="$targetDir/$(date +%F-%H-%M)"

# USB drives are not automatically mounted in WSL.
# When on Windows, mount them.
if [ -e /proc/version ]; then
  if [ ! -z "$(grep Microsoft </proc/version)" ]; then
    device_ids=( $(wmic.exe logicaldisk where drivetype=2 get DeviceID | tail -n +2 | tr '\r\n' ' ') )
    volume_names=( $(wmic.exe logicaldisk where drivetype=2 get VolumeName | tail -n +2 | tr -d '\r' | sed 's%^$%NONE%' | tr '\n' ' ') )
    for ((i=0;i<${#device_ids[@]};i++)); do
      device_id=${device_ids[$i]/:}
      volume_name=${volume_names[$i]}
      if [[ "$volume_name" == *_B-HUMAN ]]; then
        mkdir -p "/mnt/$volume_name"
        if [ -z "$(mount | grep " /mnt/$volume_name ")" ]; then
          mount -t drvfs "$device_id:" "/mnt/$volume_name"
        fi
      fi
    done
  fi
fi

# Find all regular log files.
files=$(ls /mnt/*_B-HUMAN/logs/*_*_*.log /media/*_B-HUMAN/logs/*_*_*.log /media/$USER/*_B-HUMAN/logs/*_*_*.log /run/media/$USER/*_B-HUMAN/logs/*_*_*.log /Volumes/*_B-HUMAN/logs/*_*_*.log 2>/dev/null || true)

# Append the name of the robot to the target directory and create it.
# Copy the regular log files to the corresponding directories for each robot.
if [ $copy = true -a ! -z "$files" ]; then
  echo "$mkdir1 \"$targetPath\"" | $mkdir2 2>&1 >/dev/null | ( grep -v "Couldn't create directory: Failure" 1>&2 || true )
  while read path; do
    if [ ! -z "$path" ]; then
      echo "Copying $path ..."
      name=$(basename $path | sed "s%_.*%%")
      echo "$mkdir1 \"$targetPath/$name\"" | $mkdir2 2>&1 >/dev/null | ( grep -v "Couldn't create directory: Failure" | grep -v "remote mkdir.*: Failure" 1>&2 || true )
      echo "$cp1 \"$path\"" "\"$targetPath/$name/\"" | $cp2 >/dev/null
    fi
  done <<<"$files"
fi

# Find all files 'bhumand.log'.
files2=$(ls /mnt/*_B-HUMAN/logs/bhumand*.log /media/*_B-HUMAN/logs/bhumand*.log /media/$USER/*_B-HUMAN/logs/bhumand*.log /run/media/$USER/*_B-HUMAN/logs/bhumand*.log /Volumes/*_B-HUMAN/logs/bhumand*.log 2>/dev/null || true)

# Append the name of the robot to the target directory and create it.
# Copy the these log files to the corresponding directories for each robot.
if [ $copy = true -a ! -z "$files2" ]; then
  echo "$mkdir1 \"$targetPath\"" | $mkdir2 2>&1 >/dev/null | ( grep -v "Couldn't create directory: Failure" | grep -v "remote mkdir.*: Failure" 1>&2 || true )
  while read path; do
    if [ ! -z "$path" ]; then
      echo "Copying $path ..."
      name="$(grep " Hi, I am " "$path" | head -1 | sed "s%[^ ]* Hi, I am \([^ .]*\).*%\1%")"
      echo "$mkdir1 \"$targetPath/$name\"" | $mkdir2 2>&1 >/dev/null | ( grep -v "Couldn't create directory: Failure" | grep -v "remote mkdir.*: Failure" 1>&2 || true )
      echo "$cp1 \"$path\"" "\"$targetPath/$name/\"" | $cp2 >/dev/null
    fi
  done <<<"$files2"
fi

# If the script did not run into errors until now,
# delete logs from USB drives if requested.
if $delete; then
  while read path; do
    if [ -e "$path" ]; then
      echo "Deleting logs from $(dirname "$path") ..."
      rm "$(dirname "$path")"/*
    fi
  done <<<"$files
$files2"
fi

# Unmount USB drives on Windows.
if [ -e /proc/version ]; then
  if [ ! -z "$(grep Microsoft </proc/version)" ]; then
    for ((i=0;i<${#device_ids[@]};i++)); do
      volume_name=${volume_names[$i]}
      if [[ "$volume_name" == *_B-HUMAN ]]; then
        mkdir -p "/mnt/$volume_name"
        umount "/mnt/$volume_name"
        rmdir "/mnt/$volume_name"
      fi
    done
  fi
fi
