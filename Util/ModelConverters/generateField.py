#!/usr/bin/env python3

import json
import math
import sys

if len(sys.argv) < 2:
    print('Usage: generateField.py FILE', file=sys.stderr)
    exit(1)

with open(sys.argv[1]) as f:
    o = json.load(f)

line_width = 0.05

field = o['field']
field_length = field['length']
field_width = field['width']
penalty_cross_size = field['penaltyCrossSize']
penalty_area_length = field['penaltyAreaLength']
penalty_area_width = field['penaltyAreaWidth']
penalty_cross_distance = field['penaltyCrossDistance']
center_circle_diameter = field['centerCircleDiameter']
border_strip_width = field['borderStripWidth']

gba = 'aerAxoBlaog'[::-1]
has_goal_area = f'{gba}Width' in field
if has_goal_area:
    goal_area_length = field[f'{gba}Length']
    goal_area_width = field[f'{gba}Width']

goal = o['goal']
goal_depth = goal['depth']
goal_inner_width = goal['innerWidth']
goal_post_diameter = goal['postDiameter']
goal_height = goal['height']

center_circle_segments = 32
net_mesh_size = 0.05

print('<Simulation>')
print('')
print('  <Compound name="field">')
print('')
print(f'    <BoxGeometry width="{field_width + 2}m" height="0.2m" depth="{field_length + 2}m" color="rgb(80, 80, 80)">')
print('      <Translation z="-0.1m"/>')
print('      <Material name="fieldCarpet"/>')
print('    </BoxGeometry>')
print(f'    <BoxGeometry width="0.1m" height="0.3m" depth="{field_length + 2}m" color="rgb(80, 80, 80)">')
print(f'      <Translation y="{-(field_width / 2 + 1.05)}m" z="0.15m"/>')
print('    </BoxGeometry>')
print(f'    <BoxGeometry width="0.1m" height="0.3m" depth="{field_length + 2}m" color="rgb(80, 80, 80)">')
print(f'      <Translation y="{field_width / 2 + 1.05}m" z="0.15m"/>')
print('    </BoxGeometry>')
print(f'    <BoxGeometry width="{field_width + 2}m" height="0.3m" depth="0.1m" color="rgb(80, 80, 80)">')
print(f'      <Translation x="{-(field_length / 2 + 1.05)}m" z="0.15m"/>')
print('    </BoxGeometry>')
print(f'    <BoxGeometry width="{field_width + 2}m" height="0.3m" depth="0.1m" color="rgb(80, 80, 80)">')
print(f'      <Translation x="{field_length / 2 + 1.05}m" z="0.15m"/>')
print('    </BoxGeometry>')
print('')
print('    <ComplexAppearance ref="fieldLines" name="fieldLines1"/>')
print('    <ComplexAppearance ref="fieldLines" name="fieldLines2">')
print('      <Rotation z="180degree"/>')
print('    </ComplexAppearance>')
print('    <ComplexAppearance ref="fieldCross"/>')
print('    <ComplexAppearance ref="fieldGreen"/>')
print('')
print('    <Compound ref="fieldGoal" name="Goal1">')
print(f'      <Translation x="{-(field_length / 2 - line_width / 2 + goal_post_diameter / 2)}m"/>')
print('      <Set name="color" value="goalWhite"/>')
print('    </Compound>')
print('    <Compound ref="fieldGoal" name="Goal2">')
print(f'      <Translation x="{field_length / 2 - line_width / 2 + goal_post_diameter / 2}m"/>')
print('      <Rotation z="180degree"/>')
print('      <Set name="color" value="goalWhite"/>')
print('    </Compound>')
print('')
print('  </Compound>')
print('')
print('  <Compound name="fieldGoal">')
print('')
print(f'    <CylinderGeometry height="{goal_height}m" radius="{goal_post_diameter / 2}m" name="post1">')
print(f'      <Translation y="{-(goal_inner_width + goal_post_diameter) / 2}" z="{goal_height / 2}m"/>')
print('    </CylinderGeometry>')
print(f'    <CylinderGeometry height="{goal_height}m" radius="{goal_post_diameter / 2}m" name="post2">')
print(f'      <Translation y="{(goal_inner_width + goal_post_diameter) / 2}" z="{goal_height / 2}m"/>')
print('    </CylinderGeometry>')
print('')
print(f'    <CylinderAppearance height="{goal_height + goal_post_diameter / 2}m" radius="{goal_post_diameter / 2}m" name="post1">')
print(f'      <Translation y="{-(goal_inner_width + goal_post_diameter) / 2}" z="{(goal_height + goal_post_diameter / 2) / 2}m"/>')
print('      <Surface ref="$color"/>')
print('    </CylinderAppearance>')
print(f'    <CylinderAppearance height="{goal_height + goal_post_diameter / 2}m" radius="{goal_post_diameter / 2}m" name="post2">')
print(f'      <Translation y="{(goal_inner_width + goal_post_diameter) / 2}" z="{(goal_height + goal_post_diameter / 2) / 2}m"/>')
print('      <Surface ref="$color"/>')
print('    </CylinderAppearance>')
print(f'    <CapsuleAppearance height="{goal_inner_width + 2 * goal_post_diameter}m" radius="{goal_post_diameter / 2}m" name="crossbar">')
print('      <Rotation x="90degree"/>')
print(f'      <Translation z="{goal_height + goal_post_diameter / 2}m"/>')
print('      <Surface ref="$color"/>')
print('    </CapsuleAppearance>')
print('')
print(f'    <BoxAppearance depth="{goal_depth - goal_post_diameter}m" width="0.02m" height="0.02m" name="netSupport1">')
print('      <Surface ref="goalWhite"/>')
print(f'      <Translation x="{-goal_depth / 2}m" y="{(goal_inner_width + goal_post_diameter) / 2}m" z="{goal_height - 0.01}m"/>')
print('    </BoxAppearance>')
print(f'    <BoxAppearance depth="{goal_depth - goal_post_diameter}m" width="0.02m" height="0.02m" name="netSupport1b">')
print('      <Surface ref="goalWhite"/>')
print(f'      <Translation x="{-goal_depth / 2}m" y="{(goal_inner_width + goal_post_diameter) / 2}m" z="0.01m"/>')
print('    </BoxAppearance>')
print(f'    <BoxAppearance depth="0.02m" width="0.02m" height="{goal_height - 0.04}m" name="netSupport1c">')
print('      <Surface ref="goalWhite"/>')
print(f'      <Translation x="{-(goal_depth - goal_post_diameter / 2 - 0.01)}m" y="{(goal_inner_width + goal_post_diameter) / 2}m" z="{goal_height / 2}m"/>')
print('    </BoxAppearance>')
print(f'    <BoxAppearance depth="{goal_depth - goal_post_diameter}m" width="0.02m" height="0.02m" name="netSupport2">')
print('      <Surface ref="goalWhite"/>')
print(f'      <Translation x="{-goal_depth / 2}m" y="{-(goal_inner_width + goal_post_diameter) / 2}m" z="{goal_height - 0.01}m"/>')
print('    </BoxAppearance>')
print(f'    <BoxAppearance depth="{goal_depth - goal_post_diameter}m" width="0.02m" height="0.02m" name="netSupport2b">')
print('      <Surface ref="goalWhite"/>')
print(f'      <Translation x="{-goal_depth / 2}m" y="{-(goal_inner_width + goal_post_diameter) / 2}m" z="0.01m"/>')
print('    </BoxAppearance>')
print(f'    <BoxAppearance depth="0.02m" width="0.02m" height="{goal_height - 0.04}m" name="netSupport2c">')
print('      <Surface ref="goalWhite"/>')
print(f'      <Translation x="{-(goal_depth - goal_post_diameter / 2 - 0.01)}m" y="{-(goal_inner_width + goal_post_diameter) / 2}m" z="{goal_height / 2}m"/>')
print('    </BoxAppearance>')
print(f'    <BoxAppearance depth="0.02m" width="{goal_inner_width + goal_post_diameter - 0.02}m" height="0.02m" name="netSupportQ">')
print('      <Surface ref="goalWhite"/>')
print(f'      <Translation x="{-(goal_depth - goal_post_diameter / 2 - 0.01)}m" y="0m" z="{goal_height - 0.01}m"/>')
print('    </BoxAppearance>')
print(f'    <BoxAppearance depth="0.02m" width="{goal_inner_width + goal_post_diameter - 0.02}m" height="0.02m" name="netSupportQb">')
print('      <Surface ref="goalWhite"/>')
print(f'      <Translation x="{-(goal_depth - goal_post_diameter / 2 - 0.01)}m" y="0m" z="0.01m"/>')
print('    </BoxAppearance>')
print('    <ComplexAppearance ref="fieldNet"/>')
print('')
print(f'    <BoxGeometry width="{goal_inner_width + goal_post_diameter}m" height="0.2m" depth="0.01m">')
print(f'      <Translation x="{-(goal_depth - goal_post_diameter / 2)}m" z="0.1m"/>')
print('    </BoxGeometry>')
print(f'    <BoxGeometry width="0.01mm" height="0.2m" depth="{goal_depth - goal_post_diameter}m">')
print(f'      <Translation x="{-goal_depth / 2}m" y="{-(goal_inner_width + goal_post_diameter) / 2}m" z="0.1m"/>')
print('    </BoxGeometry>')
print(f'    <BoxGeometry width="0.01mm" height="0.2m" depth="{goal_depth - goal_post_diameter}m">')
print(f'      <Translation x="{-goal_depth / 2}m" y="{(goal_inner_width + goal_post_diameter) / 2}m" z="0.1m"/>')
print('    </BoxGeometry>')
print('')
print('  </Compound>')
print('')
print('  <Surface name="fieldGreen" diffuseColor="rgb(0%, 0%, 0%)" ambientColor="rgb(39, 159, 39)" diffuseTexture="../Textures/shadow_grad.png"/>')
print('  <Surface name="fieldNet" diffuseColor="rgb(100%, 100%, 100%)" diffuseTexture="../Textures/net.png"/>')
print('  <Surface name="fieldWhite" diffuseColor="rgb(100%, 100%, 100%)" specularColor="rgb(80%, 80%, 80%)" shininess="10" diffuseTexture="../Textures/shadow_frizzle.png"/>')
print('  <Surface name="goalWhite" diffuseColor="rgb(70%, 70%, 70%)" ambientColor="rgb(45%, 45%, 45%)" specularColor="rgb(40%, 40%, 40%)" shininess="30"/>')
print('')
print('  <Vertices name="fieldLines">')
print('# middle line')
print(f'{-line_width / 2} {field_width / 2 - line_width / 2} 0')
print(f'{-line_width / 2} {penalty_cross_size / 2} 0')
print(f'{line_width / 2} {penalty_cross_size / 2} 0')
print(f'{line_width / 2} {field_width / 2 - line_width / 2} 0')
print('')
print('# goal line')
print(f'{field_length / 2 - line_width / 2} {field_width / 2 + line_width / 2} 0')
print(f'{field_length / 2 - line_width / 2} {-(field_width / 2 + line_width / 2)} 0')
print(f'{field_length / 2 + line_width / 2} {-(field_width / 2 + line_width / 2)} 0')
print(f'{field_length / 2 + line_width / 2} {field_width / 2 + line_width / 2} 0')
print('')
print('# outer line left')
print(f'{-(field_length / 2 - line_width / 2)} {field_width / 2 + line_width / 2} 0')
print(f'{-(field_length / 2 - line_width / 2)} {field_width / 2 - line_width / 2} 0')
print(f'{field_length / 2 - line_width / 2} {field_width / 2 - line_width / 2} 0')
print(f'{field_length / 2 - line_width / 2} {field_width / 2 + line_width / 2} 0')
print('')
print('# penalty area line left')
print(f'{field_length / 2 - penalty_area_length + line_width / 2} {penalty_area_width / 2 + line_width / 2} 0')
print(f'{field_length / 2 - penalty_area_length + line_width / 2} {penalty_area_width / 2 - line_width / 2} 0')
print(f'{field_length / 2 - line_width / 2} {penalty_area_width / 2 - line_width / 2} 0')
print(f'{field_length / 2 - line_width / 2} {penalty_area_width / 2 + line_width / 2} 0')
print('')
print('# penalty area line right')
print(f'{field_length / 2 - line_width / 2} {-(penalty_area_width / 2 + line_width / 2)} 0')
print(f'{field_length / 2 - line_width / 2} {-(penalty_area_width / 2 - line_width / 2)} 0')
print(f'{field_length / 2 - penalty_area_length + line_width / 2} {-(penalty_area_width / 2 - line_width / 2)} 0')
print(f'{field_length / 2 - penalty_area_length + line_width / 2} {-(penalty_area_width / 2 + line_width / 2)} 0')
print('')
print('# penalty area line front')
print(f'{field_length / 2 - penalty_area_length - line_width / 2} {penalty_area_width / 2 + line_width / 2} 0')
print(f'{field_length / 2 - penalty_area_length - line_width / 2} {-(penalty_area_width / 2 + line_width / 2)} 0')
print(f'{field_length / 2 - penalty_area_length + line_width / 2} {-(penalty_area_width / 2 + line_width / 2)} 0')
print(f'{field_length / 2 - penalty_area_length + line_width / 2} {penalty_area_width / 2 + line_width / 2} 0')
if has_goal_area:
    print('')
    print('# goal area line left')
    print(f'{field_length / 2 - goal_area_length + line_width / 2} {goal_area_width / 2 + line_width / 2} 0')
    print(f'{field_length / 2 - goal_area_length + line_width / 2} {goal_area_width / 2 - line_width / 2} 0')
    print(f'{field_length / 2 - line_width / 2} {goal_area_width / 2 - line_width / 2} 0')
    print(f'{field_length / 2 - line_width / 2} {goal_area_width / 2 + line_width / 2} 0')
    print('')
    print('# goal area line right')
    print(f'{field_length / 2 - line_width / 2} {-(goal_area_width / 2 + line_width / 2)} 0')
    print(f'{field_length / 2 - line_width / 2} {-(goal_area_width / 2 - line_width / 2)} 0')
    print(f'{field_length / 2 - goal_area_length + line_width / 2} {-(goal_area_width / 2 - line_width / 2)} 0')
    print(f'{field_length / 2 - goal_area_length + line_width / 2} {-(goal_area_width / 2 + line_width / 2)} 0')
    print('')
    print('# goal area line front')
    print(f'{field_length / 2 - goal_area_length - line_width / 2} {goal_area_width / 2 + line_width / 2} 0')
    print(f'{field_length / 2 - goal_area_length - line_width / 2} {-(goal_area_width / 2 + line_width / 2)} 0')
    print(f'{field_length / 2 - goal_area_length + line_width / 2} {-(goal_area_width / 2 + line_width / 2)} 0')
    print(f'{field_length / 2 - goal_area_length + line_width / 2} {goal_area_width / 2 + line_width / 2} 0')
print('  </Vertices>')
print('')
print('  <Vertices name="fieldCross">')
print('# cross center line')
print(f'{penalty_cross_size / 2} {line_width / 2} 0')
print(f'{penalty_cross_size / 2} {-line_width / 2} 0')
print(f'{-penalty_cross_size / 2} {line_width / 2} 0')
print(f'{-penalty_cross_size / 2} {-line_width / 2} 0')
print('')
print('# left cross')
print(f'{line_width / 2} {penalty_cross_size / 2} 0')
print(f'{line_width / 2} {line_width / 2} 0')
print(f'{-line_width / 2} {penalty_cross_size / 2} 0')
print(f'{-line_width / 2} {line_width / 2} 0')
print('')
print('# right cross')
print(f'{line_width / 2} {-penalty_cross_size / 2} 0')
print(f'{line_width / 2} {-line_width / 2} 0')
print(f'{-line_width / 2} {-penalty_cross_size / 2} 0')
print(f'{-line_width / 2} {-line_width / 2} 0')
print('  </Vertices>')
print('')
print('  <Vertices name="fieldCenterCircle">')
r1, r2 = center_circle_diameter / 2 - line_width / 2, center_circle_diameter / 2 + line_width / 2
for i in range(center_circle_segments + 1):
    angle = i / center_circle_segments * math.pi
    s, c = math.sin(angle), math.cos(angle)
    x, y = c * r1, s * r1
    print(f'{x} {y} 0')
    x, y = c * r2, s * r2
    print(f'{x} {y} 0')

print('  </Vertices>')
print('')
print('  <Vertices name="fieldGreen">')
print(f'{-(field_length / 2 + border_strip_width)} {-(field_width / 2 + border_strip_width)} -0.001')
print(f'{field_length / 2 + border_strip_width} {-(field_width / 2 + border_strip_width)} -0.001')
print(f'{field_length / 2 + border_strip_width} {field_width / 2 + border_strip_width} -0.001')
print(f'{-(field_length / 2 + border_strip_width)} {field_width / 2 + border_strip_width} -0.001')
print('  </Vertices>')
print('  <TexCoords name="fieldGreen">')
print('0 0')
print('0 1')
print('1 1')
print('1 0')
print('  </TexCoords>')
print('')
print('  <Vertices name="fieldNet">')
print(f'{-goal_post_diameter / 2} {-(goal_inner_width + goal_post_diameter) / 2} 0')
print(f'{-goal_post_diameter / 2} {-(goal_inner_width + goal_post_diameter) / 2} {goal_height}')
print(f'{-(goal_depth - goal_post_diameter / 2)} {-(goal_inner_width + goal_post_diameter) / 2} {goal_height}')
print(f'{-(goal_depth - goal_post_diameter / 2)} {-(goal_inner_width + goal_post_diameter) / 2} 0')
print('')
print(f'{-goal_post_diameter / 2} {(goal_inner_width + goal_post_diameter) / 2} 0')
print(f'{-goal_post_diameter / 2} {(goal_inner_width + goal_post_diameter) / 2} {goal_height}')
print(f'{-(goal_depth - goal_post_diameter / 2)} {(goal_inner_width + goal_post_diameter) / 2} {goal_height}')
print(f'{-(goal_depth - goal_post_diameter / 2)} {(goal_inner_width + goal_post_diameter) / 2} 0')
print('')
print(f'{-(goal_depth - goal_post_diameter / 2)} {-(goal_inner_width + goal_post_diameter) / 2} 0')
print(f'{-(goal_depth - goal_post_diameter / 2)} {(goal_inner_width + goal_post_diameter) / 2} 0')
print(f'{-(goal_depth - goal_post_diameter / 2)} {(goal_inner_width + goal_post_diameter) / 2} {goal_height}')
print(f'{-(goal_depth - goal_post_diameter / 2)} {-(goal_inner_width + goal_post_diameter) / 2} {goal_height}')
print('  </Vertices>')
net_texture_depth = (goal_depth - goal_post_diameter) / net_mesh_size
net_texture_height = goal_height / net_mesh_size
net_texture_width = (goal_inner_width + goal_post_diameter) / net_mesh_size
print('  <TexCoords name="fieldNet">')
print(f'{net_texture_depth} {net_texture_height}')
print(f'{net_texture_depth} 0')
print('0 0')
print(f'0 {net_texture_height}')
print('')
print(f'{net_texture_depth} {net_texture_height}')
print(f'{net_texture_depth} 0')
print('0 0')
print(f'0 {net_texture_height}')
print('')
print('0 0')
print(f'{net_texture_width} 0')
print(f'{net_texture_width} {net_texture_height}')
print(f'0 {net_texture_height}')
print('  </TexCoords>')
print('')
print('  <ComplexAppearance name="fieldLines">')
print('    <Surface ref="fieldWhite"/>')
print('    <Vertices ref="fieldLines"/>')
print('    <Quads>')
print('0 1 2 3')
print('4 5 6 7')
print('8 9 10 11')
print('12 13 14 15')
print('16 17 18 19')
print('20 21 22 23')
if has_goal_area:
    print('24 25 26 27')
    print('28 29 30 31')
    print('32 33 34 35')
print('    </Quads>')
print('    <ComplexAppearance ref="fieldCross">')
print(f'      <Translation x="{field_length / 2 - penalty_cross_distance}" y="0" z="0"/>')
print('    </ComplexAppearance>')
print('    <ComplexAppearance ref="fieldCenterCircle"/>')
print('  </ComplexAppearance>')
print('')
print('  <ComplexAppearance name="fieldCross">')
print('    <Surface ref="fieldWhite"/>')
print('    <Vertices ref="fieldCross"/>')
print('    <Quads>')
print('2 3 1 0')
print('6 7 5 4')
print('8 9 11 10')
print('    </Quads>')
print('  </ComplexAppearance>')
print('')
print('  <ComplexAppearance name="fieldCenterCircle">')
print('    <Surface ref="fieldWhite"/>')
print('    <Vertices ref="fieldCenterCircle"/>')
print('    <Quads>')
for i in range(center_circle_segments):
    print(f'{i * 2} {i * 2 + 1} {i * 2 + 3} {i * 2 + 2}')
print('    </Quads>')
print('  </ComplexAppearance>')
print('')
print('  <ComplexAppearance name="fieldGreen">')
print('    <Surface ref="fieldGreen"/>')
print('    <Vertices ref="fieldGreen"/>')
print('    <TexCoords ref="fieldGreen"/>')
print('    <Quads>')
print('0 1 2 3')
print('    </Quads>')
print('  </ComplexAppearance>')
print('')
print('  <ComplexAppearance name="fieldNet">')
print('    <Surface ref="fieldNet"/>')
print('    <Vertices ref="fieldNet"/>')
print('    <TexCoords ref="fieldNet"/>')
print('    <Quads>')
print('0 1 2 3')
print('3 2 1 0')
print('4 5 6 7')
print('7 6 5 4')
print('8 9 10 11')
print('11 10 9 8')
print('    </Quads>')
print('  </ComplexAppearance>')
print('')
print('</Simulation>')
